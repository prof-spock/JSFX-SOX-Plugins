desc: Display utilities for debugging
author: Dr. Thomas Tensi, 2019

@init
    //========================================
    // Debugging routines
    //========================================

    Debug_headingColor1 = Graphics_color_yellow;
    Debug_headingColor2 = Graphics_color_green;
    Debug_standardColor = Graphics_color_white;

    //--------------------

    function Debug_clear ()
        /** Resets debugging output */
    (
        Graphics_MTSMatrix_clearDataTable();
    );

    //--------------------

    function Debug_printLine (color, st)
        /** Prints <st> in debug matrix in <color> and advances
            cursor; overprints last cell if necessary */
    (
        Graphics_MTSMatrix_addTextEntry(color, st);
    );

    //--------------------

    function Debug_printLine (st)
        /** Prints <st> in debug matrix and advances
            cursor; overprints last cell if necessary */
    (
        Debug_printLine(Debug_standardColor, st);
    );

    //--------------------

    function Debug_printValue (name, value)
        /** Prints <name> and <value> in debug matrix and
            advances cursor; overprints last cell if necessary */
        local (color localName st)
    (
        st = String_make();
        localName = String_make();

        String_startsWith(name, "[H1]") ? (
            color = Debug_headingColor1;
            String_substring(localName, name, 4);
        ) : String_startsWith(name, "[H2]") ? (
            color = Debug_headingColor2;
            String_substring(localName, name, 4);
        ) : (
            color = Debug_standardColor;
            String_copy(localName, name);
        );

        String_format(st, "%s: %5.4e", localName, value);
        Debug_printLine(color, st);
        
        String_destroy(localName);
        String_destroy(st);
    );
